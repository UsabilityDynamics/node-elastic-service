/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['type.js']) {
  _$jscoverage['type.js'] = [];
  _$jscoverage['type.js'][12] = 0;
  _$jscoverage['type.js'][14] = 0;
  _$jscoverage['type.js'][29] = 0;
  _$jscoverage['type.js'][30] = 0;
  _$jscoverage['type.js'][36] = 0;
  _$jscoverage['type.js'][39] = 0;
  _$jscoverage['type.js'][46] = 0;
  _$jscoverage['type.js'][67] = 0;
  _$jscoverage['type.js'][76] = 0;
}
_$jscoverage['type.js'][12]++;
function Type(options) {
  _$jscoverage['type.js'][14]++;
  Object.defineProperties(this, {Document: {value: this.constructor.async.apply(this.Document.bind, index, type), enumerable: true, writable: true}, settings: {value: options || {}, enumerable: true, writable: true}});
  _$jscoverage['type.js'][29]++;
  return this;
}
_$jscoverage['type.js'][30]++;
;
_$jscoverage['type.js'][36]++;
Object.defineProperties(Type.prototype, {set_schema: {value: (function set_schema(schema) {
  _$jscoverage['type.js'][39]++;
  return this;
}), enumerable: true, writable: false}, set_mapping: {value: (function set_mapping(mapping) {
  _$jscoverage['type.js'][46]++;
  return this;
}), enumerable: true, writable: false}, get_schema: {value: (function get_schema(schema) {
}), enumerable: true, writable: false}, get_mapping: {value: (function get_mapping(mapping) {
}), enumerable: true, writable: false}});
_$jscoverage['type.js'][67]++;
Object.defineProperties(module.exports = Type, {create: {get: (function create() {
  _$jscoverage['type.js'][76]++;
  return (function (options) {
  _$jscoverage['type.js'][76]++;
  return new Type(options);
});
}), enumerable: true}});
_$jscoverage['type.js'].source = ["/**"," * Type Module"," *"," * -"," *"," * @module Type"," * @constructor"," * @author potanin@UD"," * @date 7/4/13"," * @type {Object}"," */","function Type( options ) {","","  Object.defineProperties( this, {","    Document: {","      value: this.constructor.async.apply( this.Document.bind, index, type ),","      enumerable: true,","      writable: true","    },","    settings: {","      value: options || {},","      enumerable: true,","      writable: true","    }","  });","","  //Document: this.async.apply( this.Document.bind, index, type ),","","  return this;","};","","/**"," * Prototypal Properties"," *"," */","Object.defineProperties( Type.prototype, {","  set_schema: {","    value: function set_schema( schema ) {","      return this;","    },","    enumerable: true,","    writable: false    ","  },","  set_mapping: {","    value: function set_mapping( mapping ) {","      return this;","    },","    enumerable: true,","    writable: false","  },","  get_schema: {","    value: function get_schema( schema ) {},","    enumerable: true,","    writable: false","  },","  get_mapping: {","    value: function get_mapping( mapping ) {},","    enumerable: true,","    writable: false","  }","});","","/**"," * Constructor Properties"," *"," */","Object.defineProperties( module.exports = Type, {","  create: {","    /**","     * Create Instance","     *","     * @method create","     * @for Type","     */","    get: function create() { ","      return function( options ) { return new Type( options ); } ","     },","    enumerable: true","  }","})"];
